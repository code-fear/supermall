{"ast":null,"code":"import axios from \"axios\";\nexport function requet(config) {\n  //1.创建axios的实例\n  var instance = axios.create({\n    baseURL: 'http://123.207.32.32:8000',\n    timeout: 5000\n  }); //axios拦截器\n  //请求拦截\n\n  instance.interceptors.request.use(function (config) {\n    console.log(config); //1.比如config中的一 些信息不符合服务器的要求\n    //2.比如每次发送网络请求时，都希望在界面中显示一个请求的图标\n    //3.某些网络请求(比如登录(token)),必须携带一些特殊的信\n\n    return config;\n  }, function (err) {\n    console.log(err);\n  }); //响应拦截\n\n  instance.interceptors.response.use(function (res) {\n    //console.log(res);\n    return res.data;\n  }, function (err) {\n    console.log(err);\n  }); //发送真正的网络请求\n\n  return instance(config);\n}","map":{"version":3,"sources":["E:/VSCode/project/Vue/supermall01/network/request.js"],"names":["axios","requet","config","instance","create","baseURL","timeout","interceptors","request","use","console","log","err","response","res","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AAC7B;AACA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5BC,IAAAA,OAAO,EAAE,2BADmB;AAE5BC,IAAAA,OAAO,EAAE;AAFmB,GAAb,CAAjB,CAF6B,CAM7B;AACA;;AACAH,EAAAA,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAAP,MAAM,EAAI;AAC1CQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ,EAD0C,CAE1C;AACA;AACA;;AACA,WAAOA,MAAP;AACD,GAND,EAMG,UAAAU,GAAG,EAAI;AACRF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD,GARD,EAR6B,CAiB7B;;AACAT,EAAAA,QAAQ,CAACI,YAAT,CAAsBM,QAAtB,CAA+BJ,GAA/B,CAAmC,UAAAK,GAAG,EAAI;AACxC;AACA,WAAOA,GAAG,CAACC,IAAX;AACD,GAHD,EAGE,UAAAH,GAAG,EAAI;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD,GALD,EAlB6B,CAyB7B;;AACA,SAAOT,QAAQ,CAACD,MAAD,CAAf;AACD","sourcesContent":["import axios from \"axios\";\r\nexport function requet(config) {\r\n  //1.创建axios的实例\r\n  const instance = axios.create({\r\n    baseURL: 'http://123.207.32.32:8000',\r\n    timeout: 5000\r\n  })\r\n  //axios拦截器\r\n  //请求拦截\r\n  instance.interceptors.request.use(config => {\r\n    console.log(config);\r\n    //1.比如config中的一 些信息不符合服务器的要求\r\n    //2.比如每次发送网络请求时，都希望在界面中显示一个请求的图标\r\n    //3.某些网络请求(比如登录(token)),必须携带一些特殊的信\r\n    return config\r\n  }, err => {\r\n    console.log(err);\r\n  })\r\n  //响应拦截\r\n  instance.interceptors.response.use(res => {\r\n    //console.log(res);\r\n    return res.data\r\n  },err => {\r\n    console.log(err);\r\n  })\r\n\r\n  //发送真正的网络请求\r\n  return instance(config)\r\n}"]},"metadata":{},"sourceType":"module"}